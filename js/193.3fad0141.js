"use strict";(self["webpackChunkhello_world"]=self["webpackChunkhello_world"]||[]).push([[193],{45193:function(t,e,r){r.r(e),r.d(e,{default:function(){return p}});var n=function(){var t=this,e=t._self._c;return e("b-container",{attrs:{fluid:""}},[e("raw-loader",{attrs:{mytxt:r(81026).Z}}),e("b-table",{attrs:{items:t.items,fields:t.fields,"current-page":t.currentPage,"per-page":t.perPage,filter:t.filter,"filter-included-fields":t.filterOn,"sort-by":t.sortBy,"sort-desc":t.sortDesc,"sort-direction":t.sortDirection,stacked:"md","show-empty":"",small:"",fixed:"",outlined:"",bordered:""},on:{"update:sortBy":function(e){t.sortBy=e},"update:sort-by":function(e){t.sortBy=e},"update:sortDesc":function(e){t.sortDesc=e},"update:sort-desc":function(e){t.sortDesc=e},filtered:t.onFiltered},scopedSlots:t._u([{key:"cell(cmd)",fn:function(r){return[e("b-button",{staticClass:"mr-1",attrs:{variant:"outline",size:"sm"},on:{click:function(e){return t.OnEditModal(r.item)}}},[e("b-icon-pencil-square")],1),e("b-button",{staticClass:"mr-1",attrs:{variant:"outline",size:"sm"},on:{click:function(e){return t.OnDel(r.item)}}},[e("b-icon-trash")],1)]}},{key:"bottom-row",fn:function(r){return[e("td",{attrs:{colspan:r.columns}},[e("b-row",[e("b-col",{staticClass:"my-1",attrs:{sm:"6"}},[e("b-form-group",{staticClass:"mb-0",attrs:{label:"Filter","label-for":"filter-input","label-cols-sm":"3","label-align-sm":"right","label-size":"sm"}},[e("b-input-group",{attrs:{size:"sm"}},[e("b-form-input",{attrs:{id:"filter-input",type:"search",placeholder:"Type to Search"},model:{value:t.filter,callback:function(e){t.filter=e},expression:"filter"}}),e("b-input-group-append",[e("b-button",{attrs:{disabled:!t.filter},on:{click:function(e){t.filter=""}}},[t._v("Clear")])],1)],1)],1)],1),e("b-col",{staticClass:"my-1",attrs:{sm:"6"}},[e("b-form-group",{staticClass:"mb-0",attrs:{label:"Per page","label-for":"per-page-select","label-cols-sm":"6","label-cols-md":"4","label-cols-lg":"3","label-align-sm":"right","label-size":"sm"}},[e("b-form-select",{attrs:{id:"per-page-select",options:t.pageOptions,size:"sm"},model:{value:t.perPage,callback:function(e){t.perPage=e},expression:"perPage"}})],1)],1),e("b-col",{staticClass:"my-1 text-right",attrs:{sm:"6"}},[t._v(" page :"+t._s(t.currentPage)+" / "+t._s(t.getLastPage(t.totalRows))+" of "+t._s(t.totalRows)+" "),e("b-button",{attrs:{size:"sm"},on:{click:t.OnAddModal}},[e("b",[t._v("Add")])])],1),e("b-col",{staticClass:"my-1",attrs:{sm:"6"}},[e("b-pagination",{staticClass:"my-0",attrs:{"total-rows":t.totalRows,"per-page":t.perPage,align:"fill",size:"sm"},model:{value:t.currentPage,callback:function(e){t.currentPage=e},expression:"currentPage"}})],1)],1)],1)]}}])}),e("b-modal",{ref:"my-modal",attrs:{size:"sm","no-close-on-backdrop":!0,"hide-footer":"",title:0==t.sel[t.pri]?"form Add":"form Edit"}},[e("div",{staticClass:"d-block"},[e("form",{on:{submit:function(e){return e.stopPropagation(),e.preventDefault(),t.onSaveModal.apply(null,arguments)}}},[e("div",{staticClass:"text-right"},[t._l(t.sel,(function(r,n){return e("div",{key:n,staticClass:"form-group row"},[n==t.pri?[e("label",{staticClass:"col-sm-4 col-form-label"},[t._v("Id")]),e("div",{staticClass:"col-sm-8"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.sel[n],expression:"sel[k]"}],class:{"form-control":!0,"ko-hop-le":t.errors.has(n)},attrs:{readonly:!0,name:n,type:"text"},domProps:{value:t.sel[n]},on:{input:function(e){e.target.composing||t.$set(t.sel,n,e.target.value)}}})])]:t._e(),"name"==n?[e("label",{staticClass:"col-sm-4 col-form-label"},[t._v("Name")]),e("div",{staticClass:"col-sm-8"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.sel[n],expression:"sel[k]"},{name:"validate",rawName:"v-validate",value:"required",expression:"'required'"}],class:{"form-control":!0,"ko-hop-le":t.errors.has(n)},attrs:{name:n,autocomplete:"off",type:"text"},domProps:{value:t.sel[n]},on:{input:function(e){e.target.composing||t.$set(t.sel,n,e.target.value)}}})])]:t._e()],2)})),e("button",{staticClass:"btn mr-1",attrs:{type:"submit"}},[t._v("Save")]),e("button",{staticClass:"btn",attrs:{type:"button"},on:{click:function(e){return t.hideModal()}}},[t._v("Cancel")])],2)])])])],1)},s=[],l=(r(57658),r(12954)),i=r(20144),o=(r(30381),r(19938)),a=r.n(o);i["default"].use(l.ZP,{classes:!0,fieldsBagName:"veeFields"}),i["default"].component("v-select",a());var d={data(){return{items:[],fields:[{key:"id",formatter:(t,e,r)=>{let n=t.toString();return n.length<4?n:n.substring(0,4)+"..."},sortable:!0,thClass:"text-center",tdClass:"text-center align-middle",thStyle:{width:"10%"}},{key:"name",sortable:!0,thClass:"text-center",tdClass:"align-middle",thStyle:{width:"80%"}},{key:"cmd",class:"text-center",thClass:"text-center",tdClass:"align-middle",thStyle:{width:"10%"}}],totalRows:1,currentPage:1,perPage:3,pageOptions:[3,5,10,15,{value:100,text:"Show a lot"}],sortBy:"",sortDesc:!1,sortDirection:"asc",filter:null,filterOn:[],infoModal:{id:"info-modal",title:"",content:""},sel:{},pri:"id",title:"Hi modal"}},computed:{sortOptions(){return this.fields.filter((t=>t.sortable)).map((t=>({text:t.label,value:t.key})))}},mounted(){let t=[];for(var e=1;e<5;e++)t.push({id:e,name:`thuc ${e}`});this.items=t,this.totalRows=this.items.length},methods:{createId(){let t=0;return this.items.forEach((e=>{e[this.pri]>t&&(t=e[this.pri])})),t+1},OnDel(t){this.delRow(t)},delRow(t){let e=t[this.pri],r=this.items.findIndex((t=>t[this.pri]==e));this.items.splice(r,1),this.totalRows=this.items.length,this.lastPage=this.getLastPage(this.totalRows)},OnEditModal(t){this.sel=JSON.parse(JSON.stringify(t)),this.showModal()},onSaveModal(){this.$validator.validateAll().then((t=>{if(!t)return void this.toast("Không hợp lệ");let e=JSON.parse(JSON.stringify(this.sel));if(0==e[this.pri])e[this.pri]=this.createId(),this.items.push(e),this.totalRows=this.items.length;else{let t=this.items.findIndex((t=>t[this.pri]==e[this.pri]));this.$set(this.items,t,e)}this.hideModal()}))},OnAddModal(){this.sel={id:0,name:"Thức"},this.showModal()},getLastPage(t){let e=this.perPage,r=t%e;return 0==r?t/e:(t-r)/e+1},info(t,e,r){this.infoModal.title=`Row index: ${e}`,this.infoModal.content=JSON.stringify(t,null,2),this.$root.$emit("bv::show::modal",this.infoModal.id,r)},resetInfoModal(){this.infoModal.title="",this.infoModal.content=""},onFiltered(t){this.totalRows=t.length,this.currentPage=1},showModal(){this.$refs["my-modal"].show()},hideModal(){this.$refs["my-modal"].hide()}}},m=d,c=r(1001),u=(0,c.Z)(m,n,s,!1,null,null,null),p=u.exports},81026:function(t,e){e["Z"]='<template>\r\n    <b-container fluid>\r\n      <raw-loader :mytxt="require(\'!raw-loader!./BasicModal.vue\').default"></raw-loader>\r\n      <b-table :items="items" :fields="fields" :current-page="currentPage" :per-page="perPage" :filter="filter"\r\n        :filter-included-fields="filterOn" :sort-by.sync="sortBy" :sort-desc.sync="sortDesc"\r\n        :sort-direction="sortDirection" stacked="md" show-empty small fixed outlined bordered @filtered="onFiltered">\r\n        <template #cell(cmd)="row">\r\n          <b-button variant="outline" class="mr-1" size="sm" @click="OnEditModal(row.item)">\r\n            <b-icon-pencil-square></b-icon-pencil-square>\r\n          </b-button>\r\n          <b-button variant="outline" class="mr-1" size="sm" @click="OnDel(row.item)">\r\n            <b-icon-trash></b-icon-trash>\r\n          </b-button>\r\n        </template>\r\n        <template #bottom-row="data">\r\n          <td :colspan="data.columns">\r\n            <b-row>\r\n              <b-col sm="6" class="my-1">\r\n                <b-form-group label="Filter" label-for="filter-input" label-cols-sm="3" label-align-sm="right"\r\n                  label-size="sm" class="mb-0">\r\n                  <b-input-group size="sm">\r\n                    <b-form-input id="filter-input" v-model="filter" type="search"\r\n                      placeholder="Type to Search"></b-form-input>\r\n  \r\n                    <b-input-group-append>\r\n                      <b-button :disabled="!filter" @click="filter = \'\'">Clear</b-button>\r\n                    </b-input-group-append>\r\n                  </b-input-group>\r\n                </b-form-group>\r\n              </b-col>\r\n              <b-col sm="6" class="my-1">\r\n                <b-form-group label="Per page" label-for="per-page-select" label-cols-sm="6" label-cols-md="4"\r\n                  label-cols-lg="3" label-align-sm="right" label-size="sm" class="mb-0">\r\n                  <b-form-select id="per-page-select" v-model="perPage" :options="pageOptions" size="sm"></b-form-select>\r\n                </b-form-group>\r\n  \r\n              </b-col>\r\n              <b-col sm="6" class="my-1 text-right">\r\n                page :{{ currentPage }} / {{ getLastPage(totalRows) }} of {{ totalRows }}\r\n                <b-button @click="OnAddModal" size="sm"><b>Add</b></b-button>\r\n              </b-col>\r\n              <b-col sm="6" class="my-1">\r\n                <b-pagination v-model="currentPage" :total-rows="totalRows" :per-page="perPage" align="fill" size="sm"\r\n                  class="my-0"></b-pagination>\r\n              </b-col>\r\n            </b-row>\r\n  \r\n          </td>\r\n        </template>\r\n  \r\n      </b-table>\r\n      \x3c!-- Info modal --\x3e\r\n      <b-modal ref="my-modal" size="sm" :no-close-on-backdrop="true" hide-footer\r\n        :title="(sel[pri] == 0) ? \'form Add\' : \'form Edit\'">\r\n        <div class="d-block">\r\n          <form @submit.stop.prevent="onSaveModal">\r\n            <div class="text-right">\r\n              <div class="form-group row" v-for="(v, k) in sel" :key="k">\r\n                <template v-if="(k == pri)">\r\n                  <label class="col-sm-4 col-form-label">Id</label>\r\n                  <div class="col-sm-8">\r\n                    <input :readonly="true" :name="k" v-model="sel[k]" :class="{\r\n                      \'form-control\': true,\r\n                      \'ko-hop-le\': errors.has(k),\r\n                    }" type="text" />\r\n                  </div>\r\n                </template>\r\n                <template v-if="k == \'name\'">\r\n                  <label class="col-sm-4 col-form-label">Name</label>\r\n                  <div class="col-sm-8">\r\n                    <input :name="k" v-model="sel[k]" autocomplete="off" :class="{\r\n                      \'form-control\': true,\r\n                      \'ko-hop-le\': errors.has(k),\r\n                    }" type="text" v-validate="\'required\'" />\r\n                  </div>\r\n                </template>\r\n              </div>\r\n              <button type="submit" class="btn mr-1">Save</button>\r\n              <button type="button" class="btn" @click="hideModal()">Cancel</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </b-modal>\r\n    </b-container>\r\n  </template>\r\n  <script>\r\n  \r\n  import VeeValidate from "vee-validate";\r\n  import Vue from "vue";\r\n  Vue.use(VeeValidate, {\r\n    classes: true,\r\n    fieldsBagName: \'veeFields\'\r\n  });\r\n  \r\n  import moment from "moment";\r\n  \r\n  import vSelect from "vue-select";\r\n  Vue.component("v-select", vSelect);\r\n  import "vue-select/dist/vue-select.css";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        items: [\r\n        ],\r\n        fields: [\r\n          {\r\n            key: \'id\',\r\n            formatter: (value, key, item) => {\r\n              let text = value.toString();\r\n              return (text.length < 4) ? text : text.substring(0, 4) + "...";\r\n            },\r\n            sortable: true,\r\n            thClass: \'text-center\',\r\n            tdClass: \'text-center align-middle\',\r\n            //tdClass: \'align-middle\'\r\n            thStyle: { width: "10%" },\r\n          },\r\n          { key: \'name\', sortable: true, thClass: \'text-center\', tdClass: \'align-middle\', thStyle: { width: "80%" } },\r\n          {\r\n            key: \'cmd\',\r\n            class: \'text-center\',\r\n            thClass: \'text-center\',\r\n            tdClass: \'align-middle\',\r\n            thStyle: { width: "10%" }\r\n          }\r\n        ],\r\n  \r\n        totalRows: 1,\r\n        currentPage: 1,\r\n        perPage: 3,\r\n        pageOptions: [3, 5, 10, 15, { value: 100, text: "Show a lot" }],\r\n        sortBy: \'\',\r\n        sortDesc: false,\r\n        sortDirection: \'asc\',\r\n        filter: null,\r\n        filterOn: [],\r\n        infoModal: {\r\n          id: \'info-modal\',\r\n          title: \'\',\r\n          content: \'\'\r\n        },\r\n  \r\n        sel: {},\r\n        pri: \'id\',\r\n        title: "Hi modal"\r\n  \r\n      }\r\n    },\r\n    computed: {\r\n      sortOptions() {\r\n        // Create an options list from our fields\r\n        return this.fields\r\n          .filter(f => f.sortable)\r\n          .map(f => {\r\n            return { text: f.label, value: f.key }\r\n          })\r\n      }\r\n    },\r\n    mounted() {\r\n      let items = [\r\n      ];\r\n      for (var i = 1; i < 5; i++) {\r\n        items.push({\r\n          id: i,\r\n          name: `thuc ${i}`\r\n        })\r\n      }\r\n      this.items = items;\r\n      this.totalRows = this.items.length;\r\n    },\r\n    methods: {\r\n      createId(){\r\n        let max=0;\r\n        this.items.forEach(x=>{\r\n          if(x[this.pri] > max){\r\n            max=x[this.pri];\r\n          }\r\n        })\r\n        return max+1;\r\n      },\r\n      OnDel(item) {\r\n        this.delRow(item);\r\n      },\r\n      delRow(item) {\r\n        let id = item[this.pri];\r\n        let index = this.items.findIndex(x => x[this.pri] == id);\r\n        this.items.splice(index, 1);\r\n        this.totalRows = this.items.length;\r\n        this.lastPage = this.getLastPage(this.totalRows);\r\n      },\r\n      OnEditModal(item) {\r\n        this.sel = JSON.parse(JSON.stringify(item));\r\n        this.showModal();\r\n      },\r\n      onSaveModal() {\r\n        this.$validator.validateAll().then((result) => {\r\n          if (!result) {\r\n            this.toast("Không hợp lệ");\r\n            return;\r\n          }\r\n          let r = JSON.parse(JSON.stringify(this.sel));\r\n          if (r[this.pri] == 0) {\r\n            r[this.pri] = this.createId();//new Date().getTime();\r\n            this.items.push(r);\r\n            this.totalRows=this.items.length;\r\n          } else {\r\n            let index = this.items.findIndex(x => x[this.pri] == r[this.pri]);\r\n            this.$set(this.items, index, r);\r\n          }\r\n          this.hideModal();\r\n        });\r\n      },\r\n      OnAddModal(){\r\n        this.sel={\r\n          id: 0,\r\n          name: \'Thức\',\r\n        }\r\n        this.showModal();\r\n      },    \r\n      getLastPage(count) {\r\n        let pageSize = this.perPage;//this.tabulator.getPageSize();\r\n        let du = count % pageSize;\r\n        return du == 0 ? count / pageSize : (count - du) / pageSize + 1;\r\n      },\r\n      info(item, index, button) {\r\n        this.infoModal.title = `Row index: ${index}`\r\n        this.infoModal.content = JSON.stringify(item, null, 2)\r\n        this.$root.$emit(\'bv::show::modal\', this.infoModal.id, button)\r\n      },\r\n      resetInfoModal() {\r\n        this.infoModal.title = \'\'\r\n        this.infoModal.content = \'\'\r\n      },\r\n      onFiltered(filteredItems) {\r\n        // Trigger pagination to update the number of buttons/pages due to filtering\r\n        this.totalRows = filteredItems.length\r\n        this.currentPage = 1\r\n      },\r\n      showModal() {\r\n        this.$refs["my-modal"].show();\r\n      },\r\n      hideModal() {\r\n        this.$refs["my-modal"].hide();\r\n      },\r\n    }\r\n  }\r\n  <\/script>'}}]);
//# sourceMappingURL=193.3fad0141.js.map