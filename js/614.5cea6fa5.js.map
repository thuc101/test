{"version":3,"file":"js/614.5cea6fa5.js","mappings":"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","sources":["webpack://hello-world/./src/views/Konva/TplCtrlV.vue","webpack://hello-world/src/views/Konva/TplCtrlV.vue","webpack://hello-world/./src/views/Konva/TplCtrlV.vue?6216","webpack://hello-world/./src/views/Konva/TplCtrlV.vue?3bac","webpack://hello-world/./src/views/Konva/TplCtrlV.vue?db0a"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('raw-loader',{attrs:{\"mytxt\":require('!raw-loader!./TplCtrlV.vue').default}}),_c('h1',{staticClass:\"border-bottom\"},[_vm._v(\"KonvaTpl2\")]),_vm._v(\" \"+_vm._s(_vm.msg)+\" \"),_c('b-row',[_c('b-col',{attrs:{\"lg\":\"4\"}},[_c('div',{attrs:{\"id\":\"stage-parent\"}},[_c('div',{staticClass:\"border\",attrs:{\"id\":\"container\"}},[_c('v-stage',{ref:\"stage\",attrs:{\"config\":_vm.configKonva},on:{\"click\":_vm.onStageClick,\"mousemove\":_vm.onStageMouseMove,\"mouseenter\":_vm.onStageMouseenter,\"mouseleave\":_vm.onStageMouseleave}},[_c('v-layer',{ref:\"layer\"},_vm._l((_vm.items),function(x,k){return _c('v-rect',{key:k,attrs:{\"config\":x},on:{\"dragstart\":_vm.handleDragstart,\"dragend\":_vm.handleDragend}})}),1)],1)],1)]),_c('button',{staticClass:\"mt-1\",on:{\"click\":_vm.onSave}},[_vm._v(\"Save\")])]),_c('b-col',{attrs:{\"lg\":\"8\"}},[_c('div',{staticClass:\"d-flex align-content-start flex-wrap\"},_vm._l((_vm.ds),function(x,k){return _c('div',{key:k,staticClass:\"p-2 bd-highlight position-relative\"},[_c('img',{staticClass:\"border\",attrs:{\"src\":x,\"width\":\"120\",\"height\":\"90\"}}),_c('div',{staticClass:\"position-absolute\",staticStyle:{\"right\":\"10px\",\"bottom\":\"10px\"}},[_c('button',{staticClass:\"mr-1\"},[_vm._v(\"Add\")]),_c('button',{staticClass:\"mr-1\"},[_vm._v(\"Del\")])])])}),0)])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <raw-loader :mytxt=\"require('!raw-loader!./TplCtrlV.vue').default\"></raw-loader>\r\n        <h1 class=\"border-bottom\">KonvaTpl2</h1>\r\n        {{ msg }}\r\n        <b-row>\r\n            <b-col lg=\"4\">\r\n                <div id=\"stage-parent\">\r\n                    <div id=\"container\" class=\"border\">\r\n                        <v-stage ref=\"stage\" @click=\"onStageClick\" @mousemove=\"onStageMouseMove\"\r\n                            @mouseenter=\"onStageMouseenter\" @mouseleave=\"onStageMouseleave\" :config=\"configKonva\">\r\n                            <v-layer ref=\"layer\">\r\n                                <v-rect v-for=\"(x, k) in items\" :key=\"k\" :config=\"x\" @dragstart=\"handleDragstart\"\r\n                                    @dragend=\"handleDragend\" />\r\n                            </v-layer>\r\n                        </v-stage>\r\n                    </div>\r\n                </div>\r\n                <button class=\"mt-1\" @click=\"onSave\">Save</button>\r\n            </b-col>\r\n            <b-col lg=\"8\">\r\n                <div class=\"d-flex align-content-start flex-wrap\">\r\n                    <div class=\"p-2 bd-highlight position-relative \" v-for=\"(x, k) in ds\" :key=\"k\">\r\n                        <img :src=\"x\" width=\"120\" height=\"90\" class=\"border\" />\r\n                        <div class=\"position-absolute\" style=\"right:10px;bottom:10px\"> \r\n                            <button class=\"mr-1\" >Add</button>\r\n                            <button class=\"mr-1\" >Del</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </b-col>\r\n        </b-row>\r\n    </div>\r\n</template>\r\n<script>\r\nvar sceneWidth = 1500;\r\nvar sceneHeight = 1000;\r\nvar stage = null;\r\nvar layer = null;\r\nfunction generateItems() {\r\n    let w=200;\r\n    let h=200;\r\n    let width = sceneWidth - w;\r\n    let height = sceneHeight - h;\r\n    const items = [];\r\n    for (let i = 0; i < 10; i++) {\r\n        items.push({\r\n            x: Math.random() * width,\r\n            y: Math.random() * height,\r\n            radius: 50,\r\n            id: \"node-\" + i,\r\n            width: w,\r\n            height: h,\r\n            fill: Konva.Util.getRandomColor(),\r\n            stroke: 'black', //Konva.Util.getRandomColor(),\r\n            draggable: true,\r\n            strokeWidth: 4,\r\n        });\r\n    }\r\n    return items;\r\n}\r\nexport default {\r\n    data() {\r\n        return {\r\n            configKonva: {\r\n                width: sceneWidth,\r\n                height: sceneHeight\r\n            },\r\n            items: [],\r\n            msg: '',\r\n            ds:[]\r\n        }\r\n    },\r\n    mounted() {\r\n        this.items = generateItems();\r\n        this.$nextTick(function () {\r\n            layer = this.$refs.layer.getNode();\r\n            stage = this.$refs.stage.getNode();\r\n            window.addEventListener(\"resize\", this.fitStageIntoParentContainer);\r\n            this.fitStageIntoParentContainer();\r\n        })\r\n        document.addEventListener('paste', this.onPasteEvent)\r\n    },\r\n    methods: {\r\n\r\n        onPasteEvent(pasteEvent){\r\n            var item = pasteEvent.clipboardData.items[0];\r\n            let that=this;\r\n            if (item.type.indexOf(\"image\") === 0) {\r\n                var blob = item.getAsFile();\r\n                var reader = new FileReader();\r\n                reader.onload = function (event) {\r\n                    document.getElementById(\"container\").src = event.target.result;\r\n                    //that.src=event.target.result;\r\n                    //alert(event.target.result);\r\n                    that.ds.push(event.target.result);\r\n                };\r\n                reader.readAsDataURL(blob);\r\n            }\r\n        },\r\n\r\n\r\n        onSave() {\r\n            let stage = this.$refs.stage.getNode();\r\n            var dataURL = stage.toDataURL({ pixelRatio: 0.5 });\r\n            alert(dataURL);\r\n        },\r\n        handleDragstart(e) {\r\n            e.target.moveToTop();\r\n        },\r\n        handleDragend(e) {\r\n            e.target.fill('yellow');\r\n        },\r\n        onStageClick(e) {\r\n            let p1 = this.myGetMouse();\r\n            this.msg = `mouse click ${JSON.stringify(p1)}`;\r\n        },\r\n        onStageMouseMove(e) {\r\n            let p = this.myGetMouse();\r\n        },\r\n        onStageMouseenter(e) {\r\n        },\r\n        onStageMouseleave(e) {\r\n        },\r\n        myGetMouse() {\r\n            let scale = stage.scale().x;\r\n            var mousePos = stage.getPointerPosition();\r\n            var x = mousePos.x;\r\n            var y = mousePos.y;\r\n            var xx = Math.round(x / scale);\r\n            var yy = Math.round(y / scale);\r\n            return { x: xx, y: yy };\r\n        },\r\n        fitStageIntoParentContainer() {\r\n            var container = document.querySelector('#stage-parent');\r\n            var containerWidth = container.offsetWidth;\r\n            var scale = containerWidth / sceneWidth;\r\n            stage.width(sceneWidth * scale);\r\n            stage.height(sceneHeight * scale);\r\n            stage.scale({ x: scale, y: scale });\r\n            this.configKonva.width = sceneWidth * scale;\r\n            this.configKonva.height = sceneHeight * scale;\r\n        },\r\n    }\r\n}\r\n</script>\r\n  ","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TplCtrlV.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TplCtrlV.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TplCtrlV.vue?vue&type=template&id=2aeb200e&\"\nimport script from \"./TplCtrlV.vue?vue&type=script&lang=js&\"\nexport * from \"./TplCtrlV.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n    <div>\\r\\n        <raw-loader :mytxt=\\\"require('!raw-loader!./TplCtrlV.vue').default\\\"></raw-loader>\\r\\n        <h1 class=\\\"border-bottom\\\">KonvaTpl2</h1>\\r\\n        {{ msg }}\\r\\n        <b-row>\\r\\n            <b-col lg=\\\"4\\\">\\r\\n                <div id=\\\"stage-parent\\\">\\r\\n                    <div id=\\\"container\\\" class=\\\"border\\\">\\r\\n                        <v-stage ref=\\\"stage\\\" @click=\\\"onStageClick\\\" @mousemove=\\\"onStageMouseMove\\\"\\r\\n                            @mouseenter=\\\"onStageMouseenter\\\" @mouseleave=\\\"onStageMouseleave\\\" :config=\\\"configKonva\\\">\\r\\n                            <v-layer ref=\\\"layer\\\">\\r\\n                                <v-rect v-for=\\\"(x, k) in items\\\" :key=\\\"k\\\" :config=\\\"x\\\" @dragstart=\\\"handleDragstart\\\"\\r\\n                                    @dragend=\\\"handleDragend\\\" />\\r\\n                            </v-layer>\\r\\n                        </v-stage>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <button class=\\\"mt-1\\\" @click=\\\"onSave\\\">Save</button>\\r\\n            </b-col>\\r\\n            <b-col lg=\\\"8\\\">\\r\\n                <div class=\\\"d-flex align-content-start flex-wrap\\\">\\r\\n                    <div class=\\\"p-2 bd-highlight position-relative \\\" v-for=\\\"(x, k) in ds\\\" :key=\\\"k\\\">\\r\\n                        <img :src=\\\"x\\\" width=\\\"120\\\" height=\\\"90\\\" class=\\\"border\\\" />\\r\\n                        <div class=\\\"position-absolute\\\" style=\\\"right:10px;bottom:10px\\\"> \\r\\n                            <button class=\\\"mr-1\\\" >Add</button>\\r\\n                            <button class=\\\"mr-1\\\" >Del</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </b-col>\\r\\n        </b-row>\\r\\n    </div>\\r\\n</template>\\r\\n<script>\\r\\nvar sceneWidth = 1500;\\r\\nvar sceneHeight = 1000;\\r\\nvar stage = null;\\r\\nvar layer = null;\\r\\nfunction generateItems() {\\r\\n    let w=200;\\r\\n    let h=200;\\r\\n    let width = sceneWidth - w;\\r\\n    let height = sceneHeight - h;\\r\\n    const items = [];\\r\\n    for (let i = 0; i < 10; i++) {\\r\\n        items.push({\\r\\n            x: Math.random() * width,\\r\\n            y: Math.random() * height,\\r\\n            radius: 50,\\r\\n            id: \\\"node-\\\" + i,\\r\\n            width: w,\\r\\n            height: h,\\r\\n            fill: Konva.Util.getRandomColor(),\\r\\n            stroke: 'black', //Konva.Util.getRandomColor(),\\r\\n            draggable: true,\\r\\n            strokeWidth: 4,\\r\\n        });\\r\\n    }\\r\\n    return items;\\r\\n}\\r\\nexport default {\\r\\n    data() {\\r\\n        return {\\r\\n            configKonva: {\\r\\n                width: sceneWidth,\\r\\n                height: sceneHeight\\r\\n            },\\r\\n            items: [],\\r\\n            msg: '',\\r\\n            ds:[]\\r\\n        }\\r\\n    },\\r\\n    mounted() {\\r\\n        this.items = generateItems();\\r\\n        this.$nextTick(function () {\\r\\n            layer = this.$refs.layer.getNode();\\r\\n            stage = this.$refs.stage.getNode();\\r\\n            window.addEventListener(\\\"resize\\\", this.fitStageIntoParentContainer);\\r\\n            this.fitStageIntoParentContainer();\\r\\n        })\\r\\n        document.addEventListener('paste', this.onPasteEvent)\\r\\n    },\\r\\n    methods: {\\r\\n\\r\\n        onPasteEvent(pasteEvent){\\r\\n            var item = pasteEvent.clipboardData.items[0];\\r\\n            let that=this;\\r\\n            if (item.type.indexOf(\\\"image\\\") === 0) {\\r\\n                var blob = item.getAsFile();\\r\\n                var reader = new FileReader();\\r\\n                reader.onload = function (event) {\\r\\n                    document.getElementById(\\\"container\\\").src = event.target.result;\\r\\n                    //that.src=event.target.result;\\r\\n                    //alert(event.target.result);\\r\\n                    that.ds.push(event.target.result);\\r\\n                };\\r\\n                reader.readAsDataURL(blob);\\r\\n            }\\r\\n        },\\r\\n\\r\\n\\r\\n        onSave() {\\r\\n            let stage = this.$refs.stage.getNode();\\r\\n            var dataURL = stage.toDataURL({ pixelRatio: 0.5 });\\r\\n            alert(dataURL);\\r\\n        },\\r\\n        handleDragstart(e) {\\r\\n            e.target.moveToTop();\\r\\n        },\\r\\n        handleDragend(e) {\\r\\n            e.target.fill('yellow');\\r\\n        },\\r\\n        onStageClick(e) {\\r\\n            let p1 = this.myGetMouse();\\r\\n            this.msg = `mouse click ${JSON.stringify(p1)}`;\\r\\n        },\\r\\n        onStageMouseMove(e) {\\r\\n            let p = this.myGetMouse();\\r\\n        },\\r\\n        onStageMouseenter(e) {\\r\\n        },\\r\\n        onStageMouseleave(e) {\\r\\n        },\\r\\n        myGetMouse() {\\r\\n            let scale = stage.scale().x;\\r\\n            var mousePos = stage.getPointerPosition();\\r\\n            var x = mousePos.x;\\r\\n            var y = mousePos.y;\\r\\n            var xx = Math.round(x / scale);\\r\\n            var yy = Math.round(y / scale);\\r\\n            return { x: xx, y: yy };\\r\\n        },\\r\\n        fitStageIntoParentContainer() {\\r\\n            var container = document.querySelector('#stage-parent');\\r\\n            var containerWidth = container.offsetWidth;\\r\\n            var scale = containerWidth / sceneWidth;\\r\\n            stage.width(sceneWidth * scale);\\r\\n            stage.height(sceneHeight * scale);\\r\\n            stage.scale({ x: scale, y: scale });\\r\\n            this.configKonva.width = sceneWidth * scale;\\r\\n            this.configKonva.height = sceneHeight * scale;\\r\\n        },\\r\\n    }\\r\\n}\\r\\n</script>\\r\\n  \";"],"names":["render","_vm","this","_c","_self","attrs","require","staticClass","_v","_s","msg","ref","configKonva","on","onStageClick","onStageMouseMove","onStageMouseenter","onStageMouseleave","_l","items","x","k","key","handleDragstart","handleDragend","onSave","ds","staticStyle","staticRenderFns","sceneWidth","sceneHeight","stage","generateItems","y","radius","id","width","height","fill","stroke","draggable","strokeWidth","data","mounted","layer","window","document","methods","onPasteEvent","reader","that","pixelRatio","alert","e","myGetMouse","fitStageIntoParentContainer","component"],"sourceRoot":""}